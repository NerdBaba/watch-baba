{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled from'styled-components';import MovieCard from'../components/MovieCard';import Pagination from'../components/Pagination';import GenreFilter from'../components/GenreFilter';import tmdbApi,{getTopRatedMovies,getUpcomingMovies,getNowPlayingMovies}from'../services/tmdbApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Grid=styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;const FilterContainer=styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;const Select=styled.select`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n`;const CategorySelect=styled.select`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  margin-right: 10px;\n`;function Discovery(){const[movies,setMovies]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(0);const[category,setCategory]=useState('top_rated');useEffect(()=>{const fetchMovies=async()=>{try{let response;switch(category){case'top_rated':response=await getTopRatedMovies(currentPage);break;case'upcoming':response=await getUpcomingMovies(currentPage);break;case'now_playing':response=await getNowPlayingMovies(currentPage);break;default:response=await getTopRatedMovies(currentPage);}setMovies(response.data.results);setTotalPages(response.data.total_pages);}catch(error){console.error('Error fetching movies:',error);}};fetchMovies();},[category,currentPage]);const handlePageChange=pageNumber=>{setCurrentPage(pageNumber);window.scrollTo(0,0);};const handleCategoryChange=e=>{setCategory(e.target.value);setCurrentPage(1);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Discover Movies\"}),/*#__PURE__*/_jsx(FilterContainer,{children:/*#__PURE__*/_jsxs(CategorySelect,{value:category,onChange:handleCategoryChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"top_rated\",children:\"Top Rated\"}),/*#__PURE__*/_jsx(\"option\",{value:\"upcoming\",children:\"Upcoming\"}),/*#__PURE__*/_jsx(\"option\",{value:\"now_playing\",children:\"Now Playing\"})]})}),/*#__PURE__*/_jsx(Grid,{children:movies.map(movie=>/*#__PURE__*/_jsx(MovieCard,{movie:movie},movie.id))}),/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,totalPages:totalPages,onPageChange:handlePageChange})]});}export default Discovery;","map":{"version":3,"names":["React","useState","useEffect","styled","MovieCard","Pagination","GenreFilter","tmdbApi","getTopRatedMovies","getUpcomingMovies","getNowPlayingMovies","jsx","_jsx","jsxs","_jsxs","Grid","div","FilterContainer","Select","select","CategorySelect","Discovery","movies","setMovies","currentPage","setCurrentPage","totalPages","setTotalPages","category","setCategory","fetchMovies","response","data","results","total_pages","error","console","handlePageChange","pageNumber","window","scrollTo","handleCategoryChange","e","target","value","children","onChange","map","movie","id","onPageChange"],"sources":["/home/baba/Projects/watch-baba/src/pages/Discovery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MovieCard from '../components/MovieCard';\nimport Pagination from '../components/Pagination';\nimport GenreFilter from '../components/GenreFilter';\nimport tmdbApi, { getTopRatedMovies, getUpcomingMovies, getNowPlayingMovies } from '../services/tmdbApi';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n`;\n\nconst CategorySelect = styled.select`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  margin-right: 10px;\n`;\n\nfunction Discovery() {\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [category, setCategory] = useState('top_rated');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        let response;\n        switch (category) {\n          case 'top_rated':\n            response = await getTopRatedMovies(currentPage);\n            break;\n          case 'upcoming':\n            response = await getUpcomingMovies(currentPage);\n            break;\n          case 'now_playing':\n            response = await getNowPlayingMovies(currentPage);\n            break;\n          default:\n            response = await getTopRatedMovies(currentPage);\n        }\n        setMovies(response.data.results);\n        setTotalPages(response.data.total_pages);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, [category, currentPage]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div>\n      <h2>Discover Movies</h2>\n      <FilterContainer>\n        <CategorySelect value={category} onChange={handleCategoryChange}>\n          <option value=\"top_rated\">Top Rated</option>\n          <option value=\"upcoming\">Upcoming</option>\n          <option value=\"now_playing\">Now Playing</option>\n        </CategorySelect>\n      </FilterContainer>\n      <Grid>\n        {movies.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))}\n      </Grid>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n}\n\nexport default Discovery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}