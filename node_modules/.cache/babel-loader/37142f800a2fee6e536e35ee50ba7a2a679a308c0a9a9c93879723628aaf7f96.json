{"ast":null,"code":"var _jsxFileName = \"/home/baba/Projects/watch-baba/watch-baba/src/pages/Discovery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MovieCard from '../components/MovieCard';\nimport Pagination from '../components/Pagination';\nimport GenreFilter from '../components/GenreFilter';\nimport tmdbApi, { getTopRatedMovies, getUpcomingMovies, getNowPlayingMovies } from '../services/tmdbApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n_c = Grid;\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n_c2 = FilterContainer;\nconst CategorySelect = styled.select`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  margin-right: 10px;\n`;\n_c3 = CategorySelect;\nfunction Discovery() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [category, setCategory] = useState('top_rated');\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        let response;\n        switch (category) {\n          case 'top_rated':\n            response = await getTopRatedMovies(currentPage);\n            break;\n          case 'upcoming':\n            response = await getUpcomingMovies(currentPage);\n            break;\n          case 'now_playing':\n            response = await getNowPlayingMovies(currentPage);\n            break;\n          default:\n            response = await getTopRatedMovies(currentPage);\n        }\n        setMovies(response.data.results);\n        setTotalPages(response.data.total_pages);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, [category, currentPage]);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n  const handleCategoryChange = e => {\n    setCategory(e.target.value);\n    setCurrentPage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Discover Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterContainer, {\n      children: /*#__PURE__*/_jsxDEV(CategorySelect, {\n        value: category,\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"top_rated\",\n          children: \"Top Rated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"upcoming\",\n          children: \"Upcoming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"now_playing\",\n          children: \"Now Playing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Discovery, \"zIlJRMxNxX0QeYUWZ+zaAjIp+f4=\");\n_c4 = Discovery;\nexport default Discovery;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"FilterContainer\");\n$RefreshReg$(_c3, \"CategorySelect\");\n$RefreshReg$(_c4, \"Discovery\");","map":{"version":3,"names":["React","useState","useEffect","styled","MovieCard","Pagination","GenreFilter","tmdbApi","getTopRatedMovies","getUpcomingMovies","getNowPlayingMovies","jsxDEV","_jsxDEV","Grid","div","_c","FilterContainer","_c2","CategorySelect","select","_c3","Discovery","_s","movies","setMovies","currentPage","setCurrentPage","totalPages","setTotalPages","category","setCategory","fetchMovies","response","data","results","total_pages","error","console","handlePageChange","pageNumber","window","scrollTo","handleCategoryChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","movie","id","onPageChange","_c4","$RefreshReg$"],"sources":["/home/baba/Projects/watch-baba/watch-baba/src/pages/Discovery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MovieCard from '../components/MovieCard';\nimport Pagination from '../components/Pagination';\nimport GenreFilter from '../components/GenreFilter';\nimport tmdbApi, { getTopRatedMovies, getUpcomingMovies, getNowPlayingMovies } from '../services/tmdbApi';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\n\n\nconst CategorySelect = styled.select`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  margin-right: 10px;\n`;\n\nfunction Discovery() {\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [category, setCategory] = useState('top_rated');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        let response;\n        switch (category) {\n          case 'top_rated':\n            response = await getTopRatedMovies(currentPage);\n            break;\n          case 'upcoming':\n            response = await getUpcomingMovies(currentPage);\n            break;\n          case 'now_playing':\n            response = await getNowPlayingMovies(currentPage);\n            break;\n          default:\n            response = await getTopRatedMovies(currentPage);\n        }\n        setMovies(response.data.results);\n        setTotalPages(response.data.total_pages);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, [category, currentPage]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div>\n      <h2>Discover Movies</h2>\n      <FilterContainer>\n        <CategorySelect value={category} onChange={handleCategoryChange}>\n          <option value=\"top_rated\">Top Rated</option>\n          <option value=\"upcoming\">Upcoming</option>\n          <option value=\"now_playing\">Now Playing</option>\n        </CategorySelect>\n      </FilterContainer>\n      <Grid>\n        {movies.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))}\n      </Grid>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n}\n\nexport default Discovery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}