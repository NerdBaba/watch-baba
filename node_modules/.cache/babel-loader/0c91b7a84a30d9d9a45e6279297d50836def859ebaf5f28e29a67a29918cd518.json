{"ast":null,"code":"var _jsxFileName = \"/home/baba/Projects/watch-baba/src/pages/Discovery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MovieCard from '../components/MovieCard';\nimport Pagination from '../components/Pagination';\nimport GenreFilter from '../components/GenreFilter';\nimport tmdbApi, { getMovieGenres, getTopRatedMovies, getUpcomingMovies, getNowPlayingMovies } from '../services/tmdbApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n_c = Grid;\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n_c2 = FilterContainer;\nconst Select = styled.select`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n`;\nfunction Discovery() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [genre, setGenre] = useState('');\n  const [sortBy, setSortBy] = useState('popularity.desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await tmdbApi.get('/discover/movie', {\n          params: {\n            sort_by: sortBy,\n            with_genres: genre,\n            page: currentPage\n          }\n        });\n        setMovies(response.data.results);\n        setTotalPages(response.data.total_pages);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, [genre, sortBy, currentPage]);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await getMovieGenres();\n        setGenres(response.data.genres);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Discover Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        genres: genres\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Discovery, \"8ySpMRuHIEwrnDzltD8qMt6OUck=\");\n_c3 = Discovery;\nexport default Discovery;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"FilterContainer\");\n$RefreshReg$(_c3, \"Discovery\");","map":{"version":3,"names":["React","useState","useEffect","styled","MovieCard","Pagination","GenreFilter","tmdbApi","getMovieGenres","getTopRatedMovies","getUpcomingMovies","getNowPlayingMovies","jsxDEV","_jsxDEV","Grid","div","_c","FilterContainer","_c2","Select","select","Discovery","_s","movies","setMovies","genres","setGenres","genre","setGenre","sortBy","setSortBy","currentPage","setCurrentPage","totalPages","setTotalPages","fetchMovies","response","get","params","sort_by","with_genres","page","data","results","total_pages","error","console","fetchGenres","handlePageChange","pageNumber","window","scrollTo","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","id","onPageChange","_c3","$RefreshReg$"],"sources":["/home/baba/Projects/watch-baba/src/pages/Discovery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MovieCard from '../components/MovieCard';\nimport Pagination from '../components/Pagination';\nimport GenreFilter from '../components/GenreFilter';\nimport tmdbApi, { getMovieGenres, getTopRatedMovies, getUpcomingMovies, getNowPlayingMovies } from '../services/tmdbApi';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n`;\n\nfunction Discovery() {\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [genre, setGenre] = useState('');\n  const [sortBy, setSortBy] = useState('popularity.desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await tmdbApi.get('/discover/movie', {\n          params: {\n            sort_by: sortBy,\n            with_genres: genre,\n            page: currentPage,\n          },\n        });\n        setMovies(response.data.results);\n        setTotalPages(response.data.total_pages);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, [genre, sortBy, currentPage]);\n\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await getMovieGenres();\n        setGenres(response.data.genres);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n\n    fetchGenres();\n  }, []);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div>\n      <h2>Discover Movies</h2>\n      <FilterContainer>\n        {/* ... (previous filter code) */}\n      </FilterContainer>\n      <Grid>\n        {movies.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} genres={genres} />\n        ))}\n      </Grid>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n}\n\nexport default Discovery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}