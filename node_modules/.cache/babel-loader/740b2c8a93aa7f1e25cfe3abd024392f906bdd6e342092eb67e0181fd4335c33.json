{"ast":null,"code":"var _jsxFileName = \"/home/baba/Projects/watch-baba/src/components/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// Container to maintain the aspect ratio (16:9) for the video player\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContainer = styled.div`\n  position: relative;\n  padding-bottom: 56.25%; /* 16:9 aspect ratio */\n  height: 0;\n  overflow: hidden;\n`;\n\n// Iframe for the embedded video player\n_c = PlayerContainer;\nconst Iframe = styled.iframe`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border: none;\n`;\n\n// Blocker overlay to capture clicks and prevent interaction with unwanted elements in the iframe\n_c2 = Iframe;\nconst Blocker = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: ${props => props.zIndex};\n  pointer-events: ${props => props.interceptClicks ? 'auto' : 'none'};\n  background-color: ${props => props.interceptClicks ? 'rgba(0, 0, 0, 0.5)' : 'transparent'}; /* Optional visual cue */\n`;\n_c3 = Blocker;\nfunction VideoPlayer({\n  imdbId,\n  season,\n  episode\n}) {\n  _s();\n  const [blockerZIndex, setBlockerZIndex] = useState(10);\n\n  // Adjust blocker z-index dynamically based on content\n  useEffect(() => {\n    const adjustZIndex = () => {\n      // Detect if the iframe content has changed and adjust blocker z-index\n      // This is a placeholder logic; you can expand this to detect more complex changes\n      const iframe = document.querySelector('iframe');\n      if (iframe && iframe.contentWindow) {\n        const hasAds = iframe.contentWindow.document.querySelector('.ad-container, .popup, .ads');\n        if (hasAds) {\n          setBlockerZIndex(100); // Move the blocker above any detected ads\n        }\n      }\n    };\n    const iframe = document.querySelector('iframe');\n    if (iframe) {\n      iframe.addEventListener('load', adjustZIndex);\n    }\n    return () => {\n      if (iframe) {\n        iframe.removeEventListener('load', adjustZIndex);\n      }\n    };\n  }, []);\n\n  // Construct the embed URL based on whether it's a movie or a TV show\n  let embedUrl = '';\n  if (season && episode) {\n    embedUrl = `https://vidsrc.xyz/embed/tv/${imdbId}/${season}-${episode}`;\n  } else {\n    embedUrl = `https://vidsrc.xyz/embed/movie/${imdbId}`;\n  }\n  return /*#__PURE__*/_jsxDEV(PlayerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Iframe, {\n      src: embedUrl,\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Blocker, {\n      zIndex: blockerZIndex,\n      interceptClicks: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Blocker, {\n      zIndex: blockerZIndex + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoPlayer, \"M15eO1U3GvO+VNcpMSqkEdaXmo8=\");\n_c4 = VideoPlayer;\nexport default VideoPlayer;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PlayerContainer\");\n$RefreshReg$(_c2, \"Iframe\");\n$RefreshReg$(_c3, \"Blocker\");\n$RefreshReg$(_c4, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","useState","styled","jsxDEV","_jsxDEV","PlayerContainer","div","_c","Iframe","iframe","_c2","Blocker","props","zIndex","interceptClicks","_c3","VideoPlayer","imdbId","season","episode","_s","blockerZIndex","setBlockerZIndex","adjustZIndex","document","querySelector","contentWindow","hasAds","addEventListener","removeEventListener","embedUrl","children","src","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/home/baba/Projects/watch-baba/src/components/VideoPlayer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// Container to maintain the aspect ratio (16:9) for the video player\nconst PlayerContainer = styled.div`\n  position: relative;\n  padding-bottom: 56.25%; /* 16:9 aspect ratio */\n  height: 0;\n  overflow: hidden;\n`;\n\n// Iframe for the embedded video player\nconst Iframe = styled.iframe`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border: none;\n`;\n\n// Blocker overlay to capture clicks and prevent interaction with unwanted elements in the iframe\nconst Blocker = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: ${(props) => props.zIndex};\n  pointer-events: ${(props) => (props.interceptClicks ? 'auto' : 'none')};\n  background-color: ${(props) => (props.interceptClicks ? 'rgba(0, 0, 0, 0.5)' : 'transparent')}; /* Optional visual cue */\n`;\n\nfunction VideoPlayer({ imdbId, season, episode }) {\n  const [blockerZIndex, setBlockerZIndex] = useState(10);\n\n  // Adjust blocker z-index dynamically based on content\n  useEffect(() => {\n    const adjustZIndex = () => {\n      // Detect if the iframe content has changed and adjust blocker z-index\n      // This is a placeholder logic; you can expand this to detect more complex changes\n      const iframe = document.querySelector('iframe');\n      if (iframe && iframe.contentWindow) {\n        const hasAds = iframe.contentWindow.document.querySelector('.ad-container, .popup, .ads');\n        if (hasAds) {\n          setBlockerZIndex(100); // Move the blocker above any detected ads\n        }\n      }\n    };\n\n    const iframe = document.querySelector('iframe');\n    if (iframe) {\n      iframe.addEventListener('load', adjustZIndex);\n    }\n\n    return () => {\n      if (iframe) {\n        iframe.removeEventListener('load', adjustZIndex);\n      }\n    };\n  }, []);\n\n  // Construct the embed URL based on whether it's a movie or a TV show\n  let embedUrl = '';\n\n  if (season && episode) {\n    embedUrl = `https://vidsrc.xyz/embed/tv/${imdbId}/${season}-${episode}`;\n  } else {\n    embedUrl = `https://vidsrc.xyz/embed/movie/${imdbId}`;\n  }\n\n  return (\n    <PlayerContainer>\n      {/* Embed the video using an iframe */}\n      <Iframe src={embedUrl} allowFullScreen />\n      {/* Multiple invisible blocker overlays to prevent interaction with popups or ads */}\n      <Blocker zIndex={blockerZIndex} interceptClicks={true} />\n      <Blocker zIndex={blockerZIndex + 1} />\n    </PlayerContainer>\n  );\n}\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}