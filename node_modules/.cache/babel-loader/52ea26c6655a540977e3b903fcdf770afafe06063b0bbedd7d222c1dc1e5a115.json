{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled from'styled-components';import{Link}from'react-router-dom';import tmdbApi from'../services/tmdbApi';import Pagination from'../components/Pagination';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Grid=styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;const ActorCard=styled(Link)`\n  border-radius: 8px;\n  overflow: hidden;\n  text-decoration: none;\n  color: white;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;const ProfilePic=styled.img`\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n`;const Name=styled.h3`\n  font-size: 15px;\n  text-align: center;\n  color: ${props=>props.theme.primary};\n`;function Actors(){const[actors,setActors]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(0);useEffect(()=>{tmdbApi.get('/person/popular',{params:{page:currentPage}}).then(response=>{setActors(response.data.results);setTotalPages(response.data.total_pages);});},[currentPage]);const handlePageChange=pageNumber=>{setCurrentPage(pageNumber);window.scrollTo(0,0);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Popular Actors\"}),/*#__PURE__*/_jsx(Grid,{children:actors.map(actor=>/*#__PURE__*/_jsxs(ActorCard,{to:`/actor/${actor.id}`,children:[/*#__PURE__*/_jsx(ProfilePic,{src:`https://image.tmdb.org/t/p/w500${actor.profile_path}`,alt:actor.name}),/*#__PURE__*/_jsx(Name,{children:actor.name})]},actor.id))}),/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,totalPages:totalPages,onPageChange:handlePageChange})]});}export default Actors;","map":{"version":3,"names":["React","useState","useEffect","styled","Link","tmdbApi","Pagination","jsx","_jsx","jsxs","_jsxs","Grid","div","ActorCard","ProfilePic","img","Name","h3","props","theme","primary","Actors","actors","setActors","currentPage","setCurrentPage","totalPages","setTotalPages","get","params","page","then","response","data","results","total_pages","handlePageChange","pageNumber","window","scrollTo","children","map","actor","to","id","src","profile_path","alt","name","onPageChange"],"sources":["/home/baba/Projects/watch-baba/src/pages/Actors.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport tmdbApi from '../services/tmdbApi';\nimport Pagination from '../components/Pagination';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nconst ActorCard = styled(Link)`\n  border-radius: 8px;\n  overflow: hidden;\n  text-decoration: none;\n  color: white;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst ProfilePic = styled.img`\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n`;\n\nconst Name = styled.h3`\n  font-size: 15px;\n  text-align: center;\n  color: ${props => props.theme.primary};\n`;\n\nfunction Actors() {\n  const [actors, setActors] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    tmdbApi.get('/person/popular', {\n      params: { page: currentPage }\n    }).then((response) => {\n      setActors(response.data.results);\n      setTotalPages(response.data.total_pages);\n    });\n  }, [currentPage]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div>\n      <h2>Popular Actors</h2>\n      <Grid>\n        {actors.map((actor) => (\n          <ActorCard key={actor.id} to={`/actor/${actor.id}`}>\n            <ProfilePic src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`} alt={actor.name} />\n            <Name>{actor.name}</Name>\n          </ActorCard>\n        ))}\n      </Grid>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n}\n\nexport default Actors;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,CAAAC,OAAO,KAAM,qBAAqB,CACzC,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,IAAI,CAAGR,MAAM,CAACS,GAAG;AACvB;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGV,MAAM,CAACC,IAAI,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAU,UAAU,CAAGX,MAAM,CAACY,GAAG;AAC7B;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,IAAI,CAAGb,MAAM,CAACc,EAAE;AACtB;AACA;AACA,WAAWC,KAAK,EAAIA,KAAK,CAACC,KAAK,CAACC,OAAO;AACvC,CAAC,CAED,QAAS,CAAAC,MAAMA,CAAA,CAAG,CAChB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACuB,WAAW,CAAEC,cAAc,CAAC,CAAGxB,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACyB,UAAU,CAAEC,aAAa,CAAC,CAAG1B,QAAQ,CAAC,CAAC,CAAC,CAE/CC,SAAS,CAAC,IAAM,CACdG,OAAO,CAACuB,GAAG,CAAC,iBAAiB,CAAE,CAC7BC,MAAM,CAAE,CAAEC,IAAI,CAAEN,WAAY,CAC9B,CAAC,CAAC,CAACO,IAAI,CAAEC,QAAQ,EAAK,CACpBT,SAAS,CAACS,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAChCP,aAAa,CAACK,QAAQ,CAACC,IAAI,CAACE,WAAW,CAAC,CAC1C,CAAC,CAAC,CACJ,CAAC,CAAE,CAACX,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAAY,gBAAgB,CAAIC,UAAU,EAAK,CACvCZ,cAAc,CAACY,UAAU,CAAC,CAC1BC,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAC,CACvB,CAAC,CAED,mBACE7B,KAAA,QAAA8B,QAAA,eACEhC,IAAA,OAAAgC,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBhC,IAAA,CAACG,IAAI,EAAA6B,QAAA,CACFlB,MAAM,CAACmB,GAAG,CAAEC,KAAK,eAChBhC,KAAA,CAACG,SAAS,EAAgB8B,EAAE,CAAE,UAAUD,KAAK,CAACE,EAAE,EAAG,CAAAJ,QAAA,eACjDhC,IAAA,CAACM,UAAU,EAAC+B,GAAG,CAAE,kCAAkCH,KAAK,CAACI,YAAY,EAAG,CAACC,GAAG,CAAEL,KAAK,CAACM,IAAK,CAAE,CAAC,cAC5FxC,IAAA,CAACQ,IAAI,EAAAwB,QAAA,CAAEE,KAAK,CAACM,IAAI,CAAO,CAAC,GAFXN,KAAK,CAACE,EAGX,CACZ,CAAC,CACE,CAAC,cACPpC,IAAA,CAACF,UAAU,EACTkB,WAAW,CAAEA,WAAY,CACzBE,UAAU,CAAEA,UAAW,CACvBuB,YAAY,CAAEb,gBAAiB,CAChC,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAf,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}