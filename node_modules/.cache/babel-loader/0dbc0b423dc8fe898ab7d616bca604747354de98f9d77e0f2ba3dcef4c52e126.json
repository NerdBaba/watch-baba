{"ast":null,"code":"var _jsxFileName = \"/home/baba/Projects/watch-baba/src/pages/ActorDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport tmdbApi from '../services/tmdbApi';\nimport MovieCard from '../components/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c = ActorContainer;\nconst ActorInfo = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n_c2 = ActorInfo;\nconst ProfilePic = styled.img`\n  width: 300px;\n  height: auto;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n_c3 = ProfilePic;\nconst Info = styled.div`\n  flex: 1;\n  min-width: 300px;\n`;\n_c4 = Info;\nconst KnownFor = styled.div`\n  display: flex;\n  overflow-x: auto;\n  gap: 10px;\n  padding: 10px 0;\n`;\n_c5 = KnownFor;\nfunction ActorDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [actor, setActor] = useState(null);\n  const [knownFor, setKnownFor] = useState([]);\n  useEffect(() => {\n    tmdbApi.get(`/person/${id}`).then(response => setActor(response.data));\n    tmdbApi.get(`/person/${id}/combined_credits`).then(response => setKnownFor(response.data.cast.sort((a, b) => b.popularity - a.popularity).slice(0, 10)));\n  }, [id]);\n  if (!actor) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ActorContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ActorInfo, {\n      children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n        src: `https://image.tmdb.org/t/p/w500${actor.profile_path}`,\n        alt: actor.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Info, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: actor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Born: \", actor.birthday]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Place of Birth: \", actor.place_of_birth]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: actor.biography\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Known For\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KnownFor, {\n      children: knownFor.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ActorDetails, \"5gmSP/+Adal/tFBTDjdK9Zr1OKE=\", false, function () {\n  return [useParams];\n});\n_c6 = ActorDetails;\nexport default ActorDetails;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ActorContainer\");\n$RefreshReg$(_c2, \"ActorInfo\");\n$RefreshReg$(_c3, \"ProfilePic\");\n$RefreshReg$(_c4, \"Info\");\n$RefreshReg$(_c5, \"KnownFor\");\n$RefreshReg$(_c6, \"ActorDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","styled","tmdbApi","MovieCard","jsxDEV","_jsxDEV","ActorContainer","div","_c","ActorInfo","_c2","ProfilePic","img","_c3","Info","_c4","KnownFor","_c5","ActorDetails","_s","id","actor","setActor","knownFor","setKnownFor","get","then","response","data","cast","sort","a","b","popularity","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","src","profile_path","alt","name","birthday","place_of_birth","biography","map","movie","_c6","$RefreshReg$"],"sources":["/home/baba/Projects/watch-baba/src/pages/ActorDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport tmdbApi from '../services/tmdbApi';\nimport MovieCard from '../components/MovieCard';\n\nconst ActorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst ActorInfo = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nconst ProfilePic = styled.img`\n  width: 300px;\n  height: auto;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nconst Info = styled.div`\n  flex: 1;\n  min-width: 300px;\n`;\n\nconst KnownFor = styled.div`\n  display: flex;\n  overflow-x: auto;\n  gap: 10px;\n  padding: 10px 0;\n`;\n\nfunction ActorDetails() {\n  const { id } = useParams();\n  const [actor, setActor] = useState(null);\n  const [knownFor, setKnownFor] = useState([]);\n\n  useEffect(() => {\n    tmdbApi.get(`/person/${id}`).then((response) => setActor(response.data));\n    tmdbApi.get(`/person/${id}/combined_credits`).then((response) => \n      setKnownFor(response.data.cast.sort((a, b) => b.popularity - a.popularity).slice(0, 10))\n    );\n  }, [id]);\n\n  if (!actor) return <div>Loading...</div>;\n\n  return (\n    <ActorContainer>\n      <ActorInfo>\n        <ProfilePic src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`} alt={actor.name} />\n        <Info>\n          <h2>{actor.name}</h2>\n          <p>Born: {actor.birthday}</p>\n          <p>Place of Birth: {actor.place_of_birth}</p>\n          <p>{actor.biography}</p>\n        </Info>\n      </ActorInfo>\n      <h3>Known For</h3>\n      <KnownFor>\n        {knownFor.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))}\n      </KnownFor>\n    </ActorContainer>\n  );\n}\n\nexport default ActorDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}