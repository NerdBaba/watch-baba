{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useLocation}from'react-router-dom';import styled from'styled-components';import MovieCard from'../components/MovieCard';import Pagination from'../components/Pagination';import{searchMulti}from'../services/tmdbApi';// Importing searchMulti\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Grid=styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;function SearchResults(){const[results,setResults]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(0);const location=useLocation();const searchQuery=new URLSearchParams(location.search).get('q');useEffect(()=>{if(searchQuery){searchMulti(searchQuery,currentPage).then(response=>{setResults(response.data.results);setTotalPages(response.data.total_pages);}).catch(error=>{console.error('Error fetching search results:',error);});}},[searchQuery,currentPage]);const handlePageChange=pageNumber=>{setCurrentPage(pageNumber);window.scrollTo(0,0);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Search Results for \\\"\",searchQuery,\"\\\"\"]}),/*#__PURE__*/_jsx(Grid,{children:results.map(item=>{if(item.media_type==='movie'||item.media_type==='tv'){return/*#__PURE__*/_jsx(MovieCard,{movie:item},item.id);}return null;})}),/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,totalPages:totalPages,onPageChange:handlePageChange})]});}export default SearchResults;","map":{"version":3,"names":["React","useState","useEffect","useLocation","styled","MovieCard","Pagination","searchMulti","jsxs","_jsxs","jsx","_jsx","Grid","div","SearchResults","results","setResults","currentPage","setCurrentPage","totalPages","setTotalPages","location","searchQuery","URLSearchParams","search","get","then","response","data","total_pages","catch","error","console","handlePageChange","pageNumber","window","scrollTo","children","map","item","media_type","movie","id","onPageChange"],"sources":["/home/baba/Projects/watch-baba/src/pages/SearchResults.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport MovieCard from '../components/MovieCard';\nimport Pagination from '../components/Pagination';\nimport { searchMulti } from '../services/tmdbApi'; // Importing searchMulti\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nfunction SearchResults() {\n  const [results, setResults] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const location = useLocation();\n  const searchQuery = new URLSearchParams(location.search).get('q');\n\n  useEffect(() => {\n    if (searchQuery) {\n      searchMulti(searchQuery, currentPage).then((response) => {\n        setResults(response.data.results);\n        setTotalPages(response.data.total_pages);\n      }).catch(error => {\n        console.error('Error fetching search results:', error);\n      });\n    }\n  }, [searchQuery, currentPage]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div>\n      <h2>Search Results for \"{searchQuery}\"</h2>\n      <Grid>\n        {results.map((item) => {\n          if (item.media_type === 'movie' || item.media_type === 'tv') {\n            return <MovieCard key={item.id} movie={item} />;\n          }\n          return null;\n        })}\n      </Grid>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchResults;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,OAASC,WAAW,KAAQ,qBAAqB,CAAE;AAAA,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEnD,KAAM,CAAAC,IAAI,CAAGR,MAAM,CAACS,GAAG;AACvB;AACA;AACA;AACA,CAAC,CAED,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACvB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACgB,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACkB,UAAU,CAAEC,aAAa,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAAAoB,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAmB,WAAW,CAAG,GAAI,CAAAC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,CAAC,GAAG,CAAC,CAEjEvB,SAAS,CAAC,IAAM,CACd,GAAIoB,WAAW,CAAE,CACff,WAAW,CAACe,WAAW,CAAEL,WAAW,CAAC,CAACS,IAAI,CAAEC,QAAQ,EAAK,CACvDX,UAAU,CAACW,QAAQ,CAACC,IAAI,CAACb,OAAO,CAAC,CACjCK,aAAa,CAACO,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC,CAC1C,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,EAAI,CAChBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACxD,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACT,WAAW,CAAEL,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAgB,gBAAgB,CAAIC,UAAU,EAAK,CACvChB,cAAc,CAACgB,UAAU,CAAC,CAC1BC,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAC,CACvB,CAAC,CAED,mBACE3B,KAAA,QAAA4B,QAAA,eACE5B,KAAA,OAAA4B,QAAA,EAAI,uBAAoB,CAACf,WAAW,CAAC,IAAC,EAAI,CAAC,cAC3CX,IAAA,CAACC,IAAI,EAAAyB,QAAA,CACFtB,OAAO,CAACuB,GAAG,CAAEC,IAAI,EAAK,CACrB,GAAIA,IAAI,CAACC,UAAU,GAAK,OAAO,EAAID,IAAI,CAACC,UAAU,GAAK,IAAI,CAAE,CAC3D,mBAAO7B,IAAA,CAACN,SAAS,EAAeoC,KAAK,CAAEF,IAAK,EAArBA,IAAI,CAACG,EAAkB,CAAC,CACjD,CACA,MAAO,KAAI,CACb,CAAC,CAAC,CACE,CAAC,cACP/B,IAAA,CAACL,UAAU,EACTW,WAAW,CAAEA,WAAY,CACzBE,UAAU,CAAEA,UAAW,CACvBwB,YAAY,CAAEV,gBAAiB,CAChC,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAnB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}