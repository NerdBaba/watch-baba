{"ast":null,"code":"var _jsxFileName = \"/home/baba/Projects/watch-baba/src/pages/Discovery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MovieCard from '../components/MovieCard';\nimport Pagination from '../components/Pagination';\nimport tmdbApi from '../services/tmdbApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n_c = Grid;\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n_c2 = FilterContainer;\nconst Select = styled.select`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n`;\nfunction Discovery() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genre, setGenre] = useState('');\n  const [sortBy, setSortBy] = useState('popularity.desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    tmdbApi.get('/discover/movie', {\n      params: {\n        sort_by: sortBy,\n        with_genres: genre,\n        page: currentPage\n      }\n    }).then(response => {\n      setMovies(response.data.results);\n      setTotalPages(response.data.total_pages);\n    });\n  }, [genre, sortBy, currentPage]);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Discover Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Discovery, \"B4Sp81GZE6pQgSGAUQvEgKRMnCg=\");\n_c3 = Discovery;\nexport default Discovery;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"FilterContainer\");\n$RefreshReg$(_c3, \"Discovery\");","map":{"version":3,"names":["React","useState","useEffect","styled","MovieCard","Pagination","tmdbApi","jsxDEV","_jsxDEV","Grid","div","_c","FilterContainer","_c2","Select","select","Discovery","_s","movies","setMovies","genre","setGenre","sortBy","setSortBy","currentPage","setCurrentPage","totalPages","setTotalPages","get","params","sort_by","with_genres","page","then","response","data","results","total_pages","handlePageChange","pageNumber","window","scrollTo","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","id","onPageChange","_c3","$RefreshReg$"],"sources":["/home/baba/Projects/watch-baba/src/pages/Discovery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MovieCard from '../components/MovieCard';\nimport Pagination from '../components/Pagination';\nimport tmdbApi from '../services/tmdbApi';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n`;\n\nfunction Discovery() {\n  const [movies, setMovies] = useState([]);\n  const [genre, setGenre] = useState('');\n  const [sortBy, setSortBy] = useState('popularity.desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    tmdbApi.get('/discover/movie', {\n      params: {\n        sort_by: sortBy,\n        with_genres: genre,\n        page: currentPage,\n      },\n    }).then((response) => {\n      setMovies(response.data.results);\n      setTotalPages(response.data.total_pages);\n    });\n  }, [genre, sortBy, currentPage]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div>\n      <h2>Discover Movies</h2>\n      <FilterContainer>\n        {/* ... (previous filter code) */}\n      </FilterContainer>\n      <Grid>\n        {movies.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))}\n      </Grid>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n}\n\nexport default Discovery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}