{"ast":null,"code":"var _jsxFileName = \"/home/baba/Projects/watch-baba/src/pages/Actors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport tmdbApi from '../services/tmdbApi';\nimport Pagination from '../components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n_c = Grid;\nconst ActorCard = styled(Link)`\n  background-color: #333;\n  border-radius: 8px;\n  overflow: hidden;\n  text-decoration: none;\n  color: white;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n_c2 = ActorCard;\nconst ProfilePic = styled.img`\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n`;\n_c3 = ProfilePic;\nconst Name = styled.h3`\n  padding: 10px;\n  font-size: 16px;\n  text-align: center;\n`;\n_c4 = Name;\nfunction Actors() {\n  _s();\n  const [actors, setActors] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    tmdbApi.get('/person/popular', {\n      params: {\n        page: currentPage\n      }\n    }).then(response => {\n      setActors(response.data.results);\n      setTotalPages(response.data.total_pages);\n    });\n  }, [currentPage]);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Popular Actors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: actors.map(actor => /*#__PURE__*/_jsxDEV(ActorCard, {\n        to: `/actor/${actor.id}`,\n        children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n          src: `https://image.tmdb.org/t/p/w500${actor.profile_path}`,\n          alt: actor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Name, {\n          children: actor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, actor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Actors, \"kwuBvv7zMs17tAKqKXDcp/LFjPA=\");\n_c5 = Actors;\nexport default Actors;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"ActorCard\");\n$RefreshReg$(_c3, \"ProfilePic\");\n$RefreshReg$(_c4, \"Name\");\n$RefreshReg$(_c5, \"Actors\");","map":{"version":3,"names":["React","useState","useEffect","styled","Link","tmdbApi","Pagination","jsxDEV","_jsxDEV","Grid","div","_c","ActorCard","_c2","ProfilePic","img","_c3","Name","h3","_c4","Actors","_s","actors","setActors","currentPage","setCurrentPage","totalPages","setTotalPages","get","params","page","then","response","data","results","total_pages","handlePageChange","pageNumber","window","scrollTo","children","fileName","_jsxFileName","lineNumber","columnNumber","map","actor","to","id","src","profile_path","alt","name","onPageChange","_c5","$RefreshReg$"],"sources":["/home/baba/Projects/watch-baba/src/pages/Actors.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport tmdbApi from '../services/tmdbApi';\nimport Pagination from '../components/Pagination';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nconst ActorCard = styled(Link)`\n  background-color: #333;\n  border-radius: 8px;\n  overflow: hidden;\n  text-decoration: none;\n  color: white;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst ProfilePic = styled.img`\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n`;\n\nconst Name = styled.h3`\n  padding: 10px;\n  font-size: 16px;\n  text-align: center;\n`;\n\nfunction Actors() {\n  const [actors, setActors] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    tmdbApi.get('/person/popular', {\n      params: { page: currentPage }\n    }).then((response) => {\n      setActors(response.data.results);\n      setTotalPages(response.data.total_pages);\n    });\n  }, [currentPage]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div>\n      <h2>Popular Actors</h2>\n      <Grid>\n        {actors.map((actor) => (\n          <ActorCard key={actor.id} to={`/actor/${actor.id}`}>\n            <ProfilePic src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`} alt={actor.name} />\n            <Name>{actor.name}</Name>\n          </ActorCard>\n        ))}\n      </Grid>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n}\n\nexport default Actors;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}